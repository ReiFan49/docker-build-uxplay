#!/bin/bash
set -e

mkdir -p /build/app/usr
USE_X11=${USE_X11:+1}
[ -n "${USE_X11}" ] && \
  apt install -y libx11-dev && \
  echo ", libx11-6" >> /build/dependencies/INSTALLwhi

git clone -b "${BRANCH:=master}" "${REPOSITORY:?Repository is not defined.}" /src
pushd /src   >/dev/null
  cmake -DCMAKE_INSTALL_PREFIX=/build/app/usr \
    -DNO_MARCH_NATIVE=ON .
  make install
popd         >/dev/null

pushd /build >/dev/null
  mkdir -p out

  if [[ "${BRANCH}" =~ ^v ]]; then
    echo "${BRANCH}" | sed -E 's|v||' > /build/APP_VERSION
  else
    grep -F '#define VERSION' /src/uxplay.cpp | \
      awk '{print $3}' | \
      sed 's|"||g' \
      > /build/APP_VERSION
  fi

  base_ver="$(cat /build/APP_VERSION)+${PKG_MAINTAINER_VERSION}"
  arch_str=$(dpkg-architecture -q DEB_HOST_ARCH)
  file_prefix="${PKG_NAME}_${base_ver}"
  file_suffix="${arch_str}.deb"
  base_name="${file_prefix}-*_${file_suffix}"
  revision_value=0
  echo "PREF:" ${file_prefix}
  echo "SUFF:" ${file_suffix}

  for fn in out/${base_name}; do
    file_revision_value=$(
      basename $fn |
      sed "s|^${file_prefix}-||g; s|_${file_suffix}$||g"
    )
    [[ "${file_revision_value}" -gt "${revision_value}" ]] &&
      revision_value=${file_revision_value}
  done
  unset fn
  revision_value=$((revision_value + 1))

  echo $(cat /build/APP_VERSION)+${PKG_MAINTAINER_VERSION}-${PKG_REVISION_NUMBER:-${revision_value}} > /build/PKG_VERSION
popd         >/dev/null

pushd /build/app >/dev/null
  [ -d DEBIAN ] && rm -rf DEBIAN || :
  mkdir -p DEBIAN
  cd DEBIAN
  echo "Package: " ${PKG_NAME:?'Package name not defined.'} >> control
  echo "Version: " $(cat /build/PKG_VERSION)                >> control
  echo "Architecture: " \
    $(dpkg-architecture -q DEB_HOST_ARCH)                   >> control
  echo "Maintainer: " "${PKG_MAINTAINER}"                   >> control
  echo "Depends: " \
    $(cat /build/dependencies/INSTALL)                      >> control
  [ -n "${PKG_SECTION}" ] && \
    echo "Section: " ${PKG_SECTION}                         >> control
  [ -n "${PKG_PRIORITY}" ] && \
    echo "Priority: " ${PKG_PRIORITY}                       >> control
  echo "Homepage: " "${REPOSITORY}"                         >> control
  echo "Description: " \
    "${PKG_DESCRIPTION:-No description provided.}"          >> control
popd             >/dev/null

pushd /build >/dev/null
  dpkg-deb --root-owner-group --build app \
    out/"${PKG_NAME}_$(cat /build/PKG_VERSION)_$(dpkg-architecture -q DEB_HOST_ARCH).deb"
popd         >/dev/null
